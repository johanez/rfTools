% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/rf_parallel.R
\name{rf_parallel}
\alias{rf_parallel}
\title{Parallel random forest using foreach}
\usage{
rf_parallel(x, y = NULL, ntree = 500, ncore = parallel::detectCores(),
  ...)
}
\arguments{
\item{x}{a data frame or a matrix of predictors, or a formula
    describing the model to be fitted (for the
    \code{print} method, an \code{randomForest} object).}

\item{y}{A response vector.  If a factor, classification is assumed,
    otherwise regression is assumed.  If omitted, \code{randomForest}
    will run in unsupervised mode.}

\item{ntree}{Number of trees to grow.  This should not be set to too
    small a number, to ensure that every input row gets predicted at
    least a few times. }

\item{ncore}{Number of cores}

\item{...}{additional arguments to RandomForest}
}
\value{
A randomForest object. No confusion matrix, err.rate, mse and rsq components are returned!
}
\description{
Parallel random forest using foreach
}
\details{
Parallel random forest using foreach and the original \code{\link[randomForest]{randomForest}}.
The number of trees is devided over the cores and grown parallel. The returned rf objects are combiend
using \code{\link[randomForest]{combine}}
}
\examples{
## Classification:
##data(iris)
set.seed(71)
iris_rfp <- rf_parallel(Species ~ ., data=iris)
print(iris_rfp)
table(iris_rfp$predicted, iris$Species)
}
\seealso{
\code{\link[randomForest]{randomForest}} for the original sequential function. \code{\link[foreach]{foreach}}
}

